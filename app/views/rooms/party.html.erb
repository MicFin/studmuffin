<div class="container"> 


  <%= render "/shared/log_out_button"%>

  <div class="row form-group">
    <div class="col-xs-12" z>
      <%= image_tag("logo.png", style: "height: 100px", class: "img-responsive") %>
    </div>
  </div>
  <div class="row">
  <% if @user.class == User %>

    <%= render "user_in_room"%>

  <% elsif @user.class == Dietitian %>
  
    <%= render "dietitian_in_room"%>

  <% elsif @user.class == AdminUser %>

    <%= render "admin_in_room"%>
  
  <% end %>
  </div>
</div>


<script src="//static.opentok.com/webrtc/v2.0/js/opentok.min.js"></script>
<!-- <script src="http://static.opentok.com/v0.91/js/TB.min.js" type="text/javascript"></script> -->
<script type="text/javascript">
	var apiKey =  "<%=ENV['API_KEY']%>";
	var sessionId = "<%= @room.sessionId %>";
	var token = "<%= @tok_token %>";

	var session;
        

//	TB.addEventListener('exception', exceptionHandler);
	
	//Video chat event listeners
	//session.addEventListener('sessionConnected', sessionConnectedHandler);
	//session.addEventListener('streamCreated', streamCreatedHandler);
    //session.addEventListener('streamDestroyed', streamDestroyedHandler);

TB.setLogLevel(TB.DEBUG);
//session.connect(apiKey, token);
   var session = TB.initSession(sessionId);
    session.addEventListener('sessionConnected', sessionConnectedHandler);
    session.addEventListener('streamCreated', streamCreatedHandler);
    session.connect(apiKey, token);

    // function subscribe_to_stream

    var publisher;
    function sessionConnectedHandler(event) {
      publisher = TB.initPublisher(apiKey, 'videobox');
      session.publish(publisher);

      // set listeners for video acces pop ups
      publisher.addEventListener('accessAllowed', accessAllowedHandler);

      publisher.addEventListener('accessDenied', accessDeniedHandler);

      // publisher.addEventListener('accessDialogOpened', accessDialogOpenedHandler);

      // publisher.addEventListener('accessDialogClosed', accessDialogClosedHandler);

      function accessAllowedHandler(e) {
        // for user allow
        $("#intro-container-2").hide(); 
        $("#intro-container-4").hide(); 
        $("#user-video").removeClass("video-center").addClass("video-right");
        $("#intro-container-3").hide();
        $("#orange-bar").hide();
        $(".dietitian-info").show();
        // $("#client-video-placeholder").hide();
        // $(".welcome-rd-container-large").each(function(i30,e30){
        //   $(e30).addClass("welcome-rd-container-small").removeClass("welcome-rd-container-large");
        // });
        // for dietitian allow
        $("#welcome-rd-2").hide();
        $("#welcome-rd-3").show();
        $("#dietitian-video").removeClass("video-left").addClass("video-right");
        // both 
        addStream(event);
      };

      function accessDeniedHandler(e){
        $("#intro-container-2").hide(); 
        $("#intro-container-3").hide();
        $("#intro-container-4").show();
      };

      // function accessDialogOpenedHandler(event) {
      //   // when "allow video" prompt pops up
      // };

      // function accessDialogClosedHandler(event){
      //   // when "allow video" prompt closes
      // };

      // Subscribe to streams that were in the session when we connected
      // subscribeToStreams(event.streams);

      function addStream(event){
        subscribeToStreams(event.streams);
      };

    };

    function streamCreatedHandler(event) {
      // Subscribe to any new streams that are created
      subscribeToStreams(event.streams);
    };

    function subscribeToStreams(streams) {
      for (var i = 0; i < streams.length; i++) {
        // Make sure we don't subscribe to ourself
        if (streams[i].connection.connectionId == session.connection.connectionId) {
          return;
        }

        // Create the div to put the subscriber element in to
        var div = document.createElement('div');
        div.setAttribute('id', 'stream' + streams[i].streamId);
        document.getElementById("videobox2").appendChild(div);
        var subscriberProps = {
          width: 500, 
          height: 375};
        // Subscribe to the stream
        session.subscribe(streams[i], div.id, subscriberProps);
      }
    }

  //   $("#check-camera").click(function(event){
  //     debugger;
  //     if (!stream.hasAudio) {
  // // You may want to adjust the user interface
  //     }
  //     if (!stream.hasVideo) {
  //       // You may want to adjust the user interface
  //     }
  //   })
    

</script>